
# firebase_config = {
#     "type": st.secrets['type'],
#     "project_id": st.secrets['project_id'],
#     "private_key_id": st.secrets['private_key_id'],
#     "private_key": st.secrets['private_key'],
#     "client_email": st.secrets['client_email'],
#     "client_id": st.secrets['client_id'],
#     "auth_uri": st.secrets['auth_uri'],
#     "token_uri": st.secrets['token_uri'],
#     "auth_provider_x509_cert_url": st.secrets['auth_provider_x509_cert_url'],
#     "client_x509_cert_url": st.secrets['client_x509_cert_url'],
#     "universe_domain": st.secrets['universe_domain']
# }
firebase_config = {
  "type": "service_account",
  "project_id": "hacktx2023-c123e",
  "private_key_id": "f8437760e5db4ed2d251a305c3a70f64396f58f3",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDAXi0ic8Vw8VhJ\nNH1RSqMAen98uOX83kGvTffK4tlnFozA7PMzivXiWSCo8MV07d/22jT1TdP6ujWl\nR8TYHC0kJLU96qEz7UKgKHzMPaFFbfrh1ZTd59vfD1Se8NwCf7XSpctpHrhPHDKA\napsrPK1FzFOM73icLT1xVcAhBSf4LGT5W8N8dfO9yed25beuG43DvqQpIB+DA57j\nleOkh0WviIuZBbJ9hM9vh3slSF8znCo/AloW7FGvOJMax3aeibuWJFg9cyfLW60f\nihzkdplnERsXGSdaJOTHzFhnG5nHn4vN9//FGuAiXr3OItQar2CxEmClVKe3CCuV\nPlwol8URAgMBAAECggEAA56yEDwn+r5b6DK/6fPy2cs0U3NCRq4jA8q+jzeSGj3D\nI81BrVZf1qTRN8SiHpdsV7+W8AfJJaZz5HqTgnKTSeMT8wiThH/iOVPRt2Ewg/c0\nGaRUgxF+InYuJDiJl1VyZTaf+4grtTdlXuPCrD9dzlqwNs550UyLo7KWpThs3l9l\nI9F2O7tScFhsiLT647UMVZ331S80J7V20leVRrC5js+G3pzCjPWwVXq1zQF62m4S\n29tVwIJd0FU0RT4VIb5kX5ayyirQ8PRjvprT/culVw0YUsT8hTrMcUd1G+bj1lwB\ngnLmZ6tgbXqn3Hm8oo7ImBaGn5HubMDOEqnXeNX+gQKBgQDgSC1i8PFZ5pv6w5TX\nntQPIRSs9vJIQcS37LzVO6rttYRElVDlsiWeCxivdzT87c0nw8FvY4EMSop1KORC\n802pFfveQ/K2SfP3irmo0c1qMxcDVnD0pa1EBG6maTYEPMZ66Ye7QBjwWo9lDrIl\n0TJHRN18iarvTmkyOOCch7rvYQKBgQDbkpf5O6Oz6L+eufSjGHpKp2Ag/fb4BN3Z\n+o1eRZJXWLVOnTzjRXvhzUCaOxGzWh1qY/bW6L4vS97TR0kzzwmbCpmiOLA3biKY\nXYfU75pdtloFg3W/WTiKEZfXYrrTFydZ+G/iAfcSAm83txCMLrpAoV/eU+f+8rgG\nFOyJXF4jsQKBgHA3zPW/ZpM7znmW2GdWYfY78BNm7+z1c08vlX//fdO4SbjjGPoE\nu8uq86v/sjSHa2nlCWkJWW1j8okSb7uL7ySWClK4nr1UnUwTTjfI2cW0UGRsINJX\n/yyUJyT+aXePTSP8qtwnAxNnzG2c/8fqNwTv0P5aB3v7OKlXShMn2oGhAoGBANjz\nBTn7FYrDo+G/NtqXau2sZyzyAj2ZAWNJTrkg4LFxMuOUNP8SPo8i8HvzdU/S8FGY\np+I8YP32Zxo2yztni8QnOxmwDV0XcxM9BuL8Q3fonxXniEYib9zr+S2VnabIr9cT\nw+h5rJec1CsmtDDuUpVdXY4dNZMQW4eW0Qf/vfxhAoGBAJ+Y0TDQvxXSouftCClP\nV78DxqGA35edbNlZCHmmyVmivReEEulkwS7nbd6J13J+uBMqrovHHZsYt/AIN7JF\nCr8uN197VIcRceiUY6Xyr0sM7aFeqK8sRI0E2QpeEQH+SHCaxiJ1ERDdrBzDr6kL\nZJWTJgwlZY9X4+e6yxJURaD1\n-----END PRIVATE KEY-----\n",
  "client_email": "firebase-adminsdk-kxj29@hacktx2023-c123e.iam.gserviceaccount.com",
  "client_id": "117073521950045136282",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-kxj29%40hacktx2023-c123e.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}

from PIL import Image
import streamlit as st
import firebase_admin
from firebase_admin import credentials, storage
import base64
import io


try:
    firebase_admin.get_app()
except ValueError as e:
    # If not, initialize a new default app
    cred = credentials.Certificate(firebase_config)
    firebase_admin.initialize_app(cred, {
        'storageBucket': 'hacktx2023-c123e.appspot.com'
    })


st.title("Gallery üñºÔ∏è")

st.write("This is where you can see images generated by other users.")

columns = st.columns(5, gap="large")

images = []


def display_images_from_firebase():
    # Get the Firebase Storage bucket
    bucket = storage.bucket()

    # List all the blobs (files) in the bucket
    blobs = bucket.list_blobs()

    # Create a list to hold the Image objects

    # Loop through each blob
    for blob in blobs:
        # Download the blob data
        blob_name = blob.name

        blob_data = blob.download_as_text()

        # The data is expected to be in the format 'data:txt;base64,{base64_data}'
        # Split the data on the comma to separate the base64 data
        
        base64_data = blob_data.split(',')[1]
     
    

        # Decode the base64 data to bytes
        image_bytes = base64.b64decode(base64_data)

        # Create a BytesIO object from the bytes
        image_io = io.BytesIO(image_bytes)

        # Create an Image object from the BytesIO object
        image = Image.open(image_io)

        # Append the Image object to the list of images
        images.append((image, blob_name))

    # Display the images in a grid using Streamlit
    columns = st.columns(5, gap="large")
    for i, (image,name)in enumerate(images):
        columns[i % 5].image(image, use_column_width=True)

display_images_from_firebase()







